#!/usr/bin/env perl
use v5.14;
use lib './lib';
use Catmandu qw(importer exporter);
use JSON;

my $verbose;
use Catmandu::Fix::libsites_rdf;
my $rdf_fix = Catmandu::Fix::libsites_rdf->new;

foreach my $isil (@ARGV) {
    if ($isil eq '-v') {
        $verbose = JSON->new->utf8->canonical->pretty;
        next;
    }
    $isil =~ s|(\./)?isil/([^/]+)(/sites\.txt)?$|$2|;

    my $infile   = "isil/$isil/sites.txt";

    if ($isil !~ /^[A-Z]{1,3}-[A-Za-z0-9\/:-]{1,10}$/) {
        warn "invalid ISIL $isil\n";
        next;  
    } elsif ( ! -f $infile ) {
        warn "missing $infile\n";
        next;
    }

    my $yaml_exporter = exporter( 'YAML', file => "isil/$isil/sites.yaml" );
    my $rdf_exporter  = exporter( 'RDF', file => "isil/$isil/sites.ttl", type => 'Ntriples' );

    my $model = RDF::Trine::Model->new;
    my %ids;

    importer('Libsites', file => $infile, isil => $isil)->each(sub{
        my $id = join "@", $_[0]->{isil}, $_[0]->{code};
        $id =~ s/@$//;
        if ($ids{$id}++) {
            if ($verbose) {
                warn "Ignoring another declaration of $id!\n";
            }
            return;
        }
        print "# YAML:\n".$verbose->encode($_[0]) if $verbose;
        $yaml_exporter->add($_[0]);
        my $aref = $rdf_fix->fix($_[0]);
        print "# aREF:\n".$verbose->encode($aref) if $verbose;
        $rdf_exporter->add($aref);
    });

    $yaml_exporter->commit;
    $rdf_exporter->commit;
    if ($verbose) {
        print "# RDF/Turtle\n";
        print `cat isil/$isil/sites.ttl`;
    }
    
    my $repeated = join ",", grep { $ids{$_} > 1 } keys %ids;
    say "isil/$isil/sites.{yml,ttl} - ".$rdf_exporter->count." departments".
        ($repeated ? " (repeated: $repeated)!" : ".");
}
